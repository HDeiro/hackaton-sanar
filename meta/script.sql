-- MySQL Script generated by MySQL Workbench
-- sáb 29 jun 2019 12:54:18 -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema saude
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema saude
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `saude` ;
USE `saude` ;

-- -----------------------------------------------------
-- Table `saude`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saude`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saude`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saude`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(100) NOT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saude`.`user_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saude`.`user_roles` (
  `user_rolescol` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  INDEX `fk_user_has_role_role1_idx` (`role_id` ASC),
  INDEX `fk_user_has_role_user_idx` (`user_id` ASC),
  PRIMARY KEY (`user_rolescol`),
  CONSTRAINT `fk_user_has_role_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `saude`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_role_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `saude`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saude`.`prescription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saude`.`prescription` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `author_id` INT NOT NULL,
  `patient_id` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_prescription_user1_idx` (`author_id` ASC),
  INDEX `fk_prescription_user2_idx` (`patient_id` ASC),
  CONSTRAINT `fk_prescription_user1`
    FOREIGN KEY (`author_id`)
    REFERENCES `saude`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_prescription_user2`
    FOREIGN KEY (`patient_id`)
    REFERENCES `saude`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saude`.`prescription_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saude`.`prescription_item` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `extra_info` TEXT NOT NULL,
  `periodicity` INT NOT NULL,
  `prescription_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_prescription_item_prescription1_idx` (`prescription_id` ASC),
  CONSTRAINT `fk_prescription_item_prescription1`
    FOREIGN KEY (`prescription_id`)
    REFERENCES `saude`.`prescription` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saude`.`mission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saude`.`mission` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(100) NOT NULL,
  `author_id` INT NOT NULL,
  `score` INT NOT NULL DEFAULT 10,
  `prescription_item_id` INT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_mission_user1_idx` (`author_id` ASC),
  INDEX `fk_mission_prescription_item1_idx` (`prescription_item_id` ASC),
  CONSTRAINT `fk_mission_user1`
    FOREIGN KEY (`author_id`)
    REFERENCES `saude`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mission_prescription_item1`
    FOREIGN KEY (`prescription_item_id`)
    REFERENCES `saude`.`prescription_item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saude`.`user_score`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saude`.`user_score` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mission_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `int` TINYINT NOT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_mission_has_user_user1_idx` (`user_id` ASC),
  INDEX `fk_mission_has_user_mission1_idx` (`mission_id` ASC),
  CONSTRAINT `fk_mission_has_user_mission1`
    FOREIGN KEY (`mission_id`)
    REFERENCES `saude`.`mission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mission_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `saude`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `saude`.`role`
-- -----------------------------------------------------
START TRANSACTION;
USE `saude`;
INSERT INTO `saude`.`role` (`id`, `description`, `created_at`, `updated_at`) VALUES (1, 'Médico', NULL, NULL);
INSERT INTO `saude`.`role` (`id`, `description`, `created_at`, `updated_at`) VALUES (2, 'Paciente', NULL, NULL);

COMMIT;

